var config = require("./config");

/*
* @class Queue
* @constructor
* @param {Object} [params]: expected parameters
* @param {Object} [params.client]
* @param {Object} [params.path]
*
* @method popMessage
* returns {Object} message from Queue and deletes it from Queue
*
* @method readLockMessage
* returns {Object} message from Queue
* 
* @method sendMessage
* @param {String} [message]
* @ returns nothing
* @ throw {Error}
*
* @method sendMessageBatch
* @param {String} [messageList]
* @ returns nothing
* @ throw {Error}
*/

function Queue(params){
    if (!params || !params.client || !params.path){
        throw {
            "errorCode": "Missing_Parameter",
            "errorDetail": "Client, Path - Params cannot be null or empty"
        };
    }

    if (!params.resource || !params.authMode){
        var aData = config.topicConfig["defaultAuthData"]

        this.authData = {
            "authMode": aData.authMode,
            "resource": aData.resource + params.path
        };
    }else{
        this.authData = {
            "authMode": params.authMode,
            "resource": params.resource
        };
    }
    
    this.client = params.client;
    this.path = params.path;
}

Queue.prototype.popMessage = function(){
    var reqParams = {
        "url":"https://" + config.defaultNameSpace + ".servicebus.windows.net/" + this.path + "/messages/head",
        "method": "DELETE"
    };

    return this.client.callApi(reqParams, this.authData); 
};

Queue.prototype.readLockMessage = function(){
    var reqParams = {
        "url": "https://" + config.defaultNameSpace + ".servicebus.windows.net/" + this.path + "/messages/head",
        "method": "POST"
    };

    return this.client.callApi(reqParams, this.authData); 
};

Queue.prototype.sendMessage = function(message){
    if (!message){
        throw {
            "errorCode": "Missing_Parameter",
            "errorDetail": "Message - Parameter cannot be null or empty"
        };
    }

    var reqParams = {
        "url": "https://" + config.defaultNameSpace + ".servicebus.windows.net/" + this.path + "/messages",
        "method": "POST",
        "bodyString": '<string xmlns="http://schemas.microsoft.com/2003/10/Serialization/">' + JSON.stringify(message) + '</string>'
    };

    return this.client.callApi(reqParams, this.authData); 
}

Queue.prototype.sendMessageBatch = function(messageList){
    if (!messageList){
        throw {
            "errorCode": "Missing_Parameter",
            "errorDetail": "Message - Parameter cannot be null or empty"
        };
    }

    var reqParams = {
        "url": "https://" + config.defaultNameSpace + ".servicebus.windows.net/" + this.path + "/messages",
        "method": "POST",
        "Content-Type": application/vnd.microsoft.servicebus.json,
        "Body": messageList
    };

    return this.client.callApi(reqParams, this.authData); 
}
















